function countChecked(){"all"===checkState&&$(".bulk_action input[name='table_records']").iCheck("check"),"none"===checkState&&$(".bulk_action input[name='table_records']").iCheck("uncheck");var e=$(".bulk_action input[name='table_records']:checked").length;e?($(".column-title").hide(),$(".bulk-actions").show(),$(".action-cnt").html(e+" Records Selected")):($(".column-title").show(),$(".bulk-actions").hide())}!function(e,t){var n=function(e,t,n){var i;return function(){function c(){n||e.apply(a,o),i=null}var a=this,o=arguments;i?clearTimeout(i):n&&e.apply(a,o),i=setTimeout(c,t||100)}};jQuery.fn[t]=function(e){return e?this.bind("resize",n(e)):this.trigger(t)}}(jQuery,"smartresize");var CURRENT_URL=window.location.href.split("?")[0],$BODY=$("body"),$MENU_TOGGLE=$("#menu_toggle"),$SIDEBAR_MENU=$("#sidebar-menu"),$SIDEBAR_FOOTER=$(".sidebar-footer"),$LEFT_COL=$(".left_col"),$RIGHT_COL=$(".right_col"),$NAV_MENU=$(".nav_menu"),$FOOTER=$("footer");$(document).ready(function(){var e=function(){$RIGHT_COL.css("min-height",$(window).height());var e=$BODY.outerHeight(),t=$BODY.hasClass("footer_fixed")?-10:$FOOTER.height(),n=$LEFT_COL.eq(1).height()+$SIDEBAR_FOOTER.height(),i=n>e?n:e;i-=$NAV_MENU.height()+t,$RIGHT_COL.css("min-height",i)};$SIDEBAR_MENU.find("a").on("click",function(t){var n=$(this).parent();n.is(".active")?(n.removeClass("active active-sm"),$("ul:first",n).slideUp(function(){e()})):(n.parent().is(".child_menu")||($SIDEBAR_MENU.find("li").removeClass("active active-sm"),$SIDEBAR_MENU.find("li ul").slideUp()),n.addClass("active"),$("ul:first",n).slideDown(function(){e()}))}),$MENU_TOGGLE.on("click",function(){$BODY.hasClass("nav-md")?($SIDEBAR_MENU.find("li.active ul").hide(),$SIDEBAR_MENU.find("li.active").addClass("active-sm").removeClass("active")):($SIDEBAR_MENU.find("li.active-sm ul").show(),$SIDEBAR_MENU.find("li.active-sm").addClass("active").removeClass("active-sm")),$BODY.toggleClass("nav-md nav-sm"),e()}),$SIDEBAR_MENU.find('a[href="'+CURRENT_URL+'"]').parent("li").addClass("current-page"),$SIDEBAR_MENU.find("a").filter(function(){return this.href==CURRENT_URL}).parent("li").addClass("current-page").parents("ul").slideDown(function(){e()}).parent().addClass("active"),$(window).smartresize(function(){e()}),e(),$.fn.mCustomScrollbar&&$(".menu_fixed").mCustomScrollbar({autoHideScrollbar:!0,theme:"minimal",mouseWheel:{preventDefault:!0}})}),$(document).ready(function(){$(".collapse-link").on("click",function(){var e=$(this).closest(".x_panel"),t=$(this).find("i"),n=e.find(".x_content");e.attr("style")?n.slideToggle(200,function(){e.removeAttr("style")}):(n.slideToggle(200),e.css("height","auto")),t.toggleClass("fa-chevron-up fa-chevron-down")}),$(".close-link").click(function(){var e=$(this).closest(".x_panel");e.remove()})}),$(document).ready(function(){$('[data-toggle="tooltip"]').tooltip({container:"body"})}),$(".progress .progress-bar")[0]&&$(".progress .progress-bar").progressbar(),$(document).ready(function(){if($(".js-switch")[0]){var e=Array.prototype.slice.call(document.querySelectorAll(".js-switch"));e.forEach(function(e){new Switchery(e,{color:"#26B99A"})})}}),$(document).ready(function(){$("input.flat")[0]&&$(document).ready(function(){$("input.flat").iCheck({checkboxClass:"icheckbox_flat-green",radioClass:"iradio_flat-green"})})}),$("table input").on("ifChecked",function(){checkState="",$(this).parent().parent().parent().addClass("selected"),countChecked()}),$("table input").on("ifUnchecked",function(){checkState="",$(this).parent().parent().parent().removeClass("selected"),countChecked()});var checkState="";$(".bulk_action input").on("ifChecked",function(){checkState="",$(this).parent().parent().parent().addClass("selected"),countChecked()}),$(".bulk_action input").on("ifUnchecked",function(){checkState="",$(this).parent().parent().parent().removeClass("selected"),countChecked()}),$(".bulk_action input#check-all").on("ifChecked",function(){checkState="all",countChecked()}),$(".bulk_action input#check-all").on("ifUnchecked",function(){checkState="none",countChecked()}),$(document).ready(function(){$(".expand").on("click",function(){$(this).next().slideToggle(200),$expand=$(this).find(">:first-child"),"+"==$expand.text()?$expand.text("-"):$expand.text("+")})}),"undefined"!=typeof NProgress&&($(document).ready(function(){NProgress.start()}),$(window).load(function(){NProgress.done()}));

$(document).ready(function() {

  app.ajaxSetup();

    $('#wizard').smartWizard({
        labelNext:'Siguiente', // label for Next button
    	labelPrevious:'Anterior', // label for Previous button
    	labelFinish:'Guardar',
    	onLeaveStep:leaveAStepCallback,
        onFinish:onFinishCallback
    });

    function leaveAStepCallback(obj, context){

       /* var validatedStep;

        if (context.fromStep > context.toStep) {
            return true;
        } else {
            validatedStep = validateFormStep();
        }
*/
        //alert("Leaving step " + context.fromStep + " to go to step " + context.toStep);
        //alert("Paso " + context.fromStep +  " validado ? = " + validatedStep);
        //return validateSteps(context.fromStep); // return false to stay on step and true to continue navigation 
        return true;
    }

    function onFinishCallback(objs, context){
        /*if (validateFormStep()) {
          alert('Guardar');
          var datosForm = {data: JSON.stringify(app.dataFormPatient)}
          app.httpPost('dra/paciente_nuevo', datosForm,
            function (response){
            console.log(response);
            }, function (response){
            console.log(response);
            });
        } */
        var aliments = [];
        $("#aliments .fields-container").each(function(){
            var aliment = {};
            var dayMoment = $(this).find(".day-moment").val();
            var placeMoment = $(this).find(".place-moment").val();
            var foodId = $(this).find(".food_id").val();
            aliment.day_moment = dayMoment;
            aliment.place = placeMoment;
            aliment.food_id = foodId;
        });
        $("#input_aliments").val(JSON.stringify(aliments));
        $("#form_patient").submit();

        var habits = [];
        $("#habits .habit-container").each(function(){
            var habit = {};
            var nameHabit = $(this).find("habit-name").val();
            var frecuency = $(this).find("frecuency-habit").val();
            var timeHabit = $(this).find("time-habit").val();
            var timeUnits = $(this).find("time-habit-unit").val();
            var description = $(this).find("habit-description").val();
            habit.name = nameHabit;
            habit.frecuency = frecuency;
            habit.time = timeHabit;
            habit.units = timeUnits;
            habit.description = description;
            habits.push(habit);
        });
        $("#input_habits").val(JSON.stringify(habits));
    }

    $('#wizard_verticle').smartWizard({
        transitionEffect: 'fade',
    });

    $('.buttonNext').addClass('btn btn-success');
    $('.buttonPrevious').addClass('btn btn-primary');
    $('.buttonFinish').addClass('btn btn-default'); 

    function saveData() {
    	alert('Guardar Form');
    }

    function validateFormStep() {
        var formElement = $('body').find('form.form-data:visible');
        return validateForm($(formElement));
    }

    function validateForm(formElement) {

        var submit = true;
        // evaluate the form using generic validaing
        if (!validator.checkAll($(formElement))) {
          submit = false;
        } else
          app.dataFormPatient.push( $(formElement).serializeArray('datos') );
        console.log(app.dataFormPatient);

        return submit;

    }

    function getSubmittedFormAJAX(dataValues, onSuccess, onError) {

        $.ajax({
            type: 'GET',
            url: 'http://localhost:8000/dra/paciente_nuevo',
            data: dataValues,
            success: function (response) {
                onSuccess(response);
            },
            error: function (xhr, ajaxOptions, thrownError) {
                onError(thrownError);
            }
        });
    }

    function callAjax() {
        var dataValues = {validado: true};
        var resultado = getSubmittedFormAJAX(dataValues, 
            function onSuccess (response) {
                console.log(dataValues);
            }, function onError (thrownError) {
                console.log(thrownError);
            });
    }

    function validateBasicData() {
        alert('form 1');
        validator.message.date = 'not a real date';

        // validate a field on "blur" event, a 'select' on 'change' event & a '.reuired' classed multifield on 'keyup':
        $('form.basic-data-form, form.inventory')
          .on('blur', 'input[required], input.optional, select[required], select.required', validator.checkField)
          .on('change', 'select.required', validator.checkField)
          .on('keypress', 'input[required][pattern]', validator.keypress);

        $('.multi.required').on('keyup blur', 'input', function() {
          validator.checkField.apply($(this).siblings().last()[0]);
        });

        $('form.inventory').submit(function(e) {
          e.preventDefault();
          var submit = true;

          // evaluate the form using generic validaing
          if (!validator.checkAll($(this))) {
            submit = false;
          }

          if (submit)
            this.submit();

          return false;
        });
    }

    /*Validacion de formularios*/
    validator.message['date'] = 'not a real date';

    $('form')
    .on('blur', 'input[required], input.optional, select[required], select.required', validator.checkField)
    .on('change', 'input.datepicker, select[required], select.required', validator.checkField)
    .on('keypress', 'input[required][pattern]', validator.keypress);
    $('form').toggleClass('mode2');

    $('.multi.required').on('keyup blur', 'input', function() {
    validator.checkField.apply($(this).siblings().last()[0]);
    });

    $('form.inventory').submit(function(e) {
      e.preventDefault();
      var submit = true;

      // evaluate the form using generic validaing
      if (!validator.checkAll($(this))) {
        submit = false;
      }

      if (submit)
        this.submit();

      return false;
    });

    // var myDropzone = new Dropzone("div#dropZoneArea");


    // Dropzone.options.realDropzone = {
    //     maxFilesize: 5,
    //     addRemoveLinks: true,
    //     dictResponseError: 'Server not Configured',
    //     acceptedFiles: ".png,.jpg,.gif,.bmp,.jpeg",
    //     init:function(){
    //       var self = this;
    //       // config
    //       self.options.addRemoveLinks = true;
    //       self.options.dictRemoveFile = "Delete";
    //       //New file added
    //       self.on("addedfile", function (file) {
    //         console.log('new file added ', file);
    //       });
    //       // Send file starts
    //       self.on("sending", function (file) {
    //         console.log('upload started', file);
    //         $('.meter').show();
    //       });
          
    //       // File upload Progress
    //       self.on("totaluploadprogress", function (progress) {
    //         console.log("progress ", progress);
    //         $('.roller').width(progress + '%');
    //       });

    //       self.on("queuecomplete", function (progress) {
    //         $('.meter').delay(999).slideUp(999);
    //       });
          
    //       // On removing file
    //       self.on("removedfile", function (file) {
    //         console.log(file);
    //       });
    //     }
    //   };

});
